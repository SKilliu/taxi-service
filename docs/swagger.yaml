definitions:
  AddCarReq:
    properties:
      model:
        example: BMW
        type: string
      number:
        example: AX1234XA
        type: string
      series:
        example: M5
        type: string
      status:
        example: available
        type: string
    type: object
  CreateOrderReq:
    properties:
      car_arrival_time:
        example: "2020-11-11T23:30:00Z"
        type: string
      destination_point:
        $ref: '#/definitions/Location'
        type: object
      starting_point:
        $ref: '#/definitions/Location'
        type: object
    type: object
  EditProfileReq:
    properties:
      email:
        example: new-email@example.com
        type: string
      name:
        example: Tester
        type: string
    type: object
  ErrResp:
    properties:
      code:
        example: 500
        type: integer
      message:
        example: INTERNAL_SERVER_ERROR
        type: string
    type: object
  GetAvailableOrdersResp:
    properties:
      car_arrival_time:
        type: string
      client_id:
        type: string
      id:
        type: string
      price:
        type: number
      trip_info:
        $ref: '#/definitions/TripInfo'
        type: object
    type: object
  GetProfileResp:
    properties:
      account_type:
        example: operator
        type: string
      email:
        example: test@example.com
        type: string
      id:
        example: Yh34te-saaiud3322chadsc-asdvcsf
        type: string
      name:
        example: Tester
        type: string
      profile_image_url:
        example: http://simple-service-backend/simple-service/photo-924y82hde7ce.jpg
        type: string
    type: object
  Location:
    properties:
      address:
        example: Some City, some Street, 123
        type: string
      destination_point_longitude:
        example: 12.12345
        type: number
      latitude:
        example: 12.12345
        type: number
    type: object
  SignInReq:
    properties:
      email:
        example: test@example.com
        type: string
      password:
        example: qwerty1234
        type: string
    type: object
  SignUpReq:
    properties:
      account_type:
        example: client
        type: string
      email:
        example: test@example.com
        type: string
      name:
        example: TestName
        type: string
      password:
        example: qwerty1234
        type: string
    type: object
  SignUpResp:
    properties:
      token:
        example: nausdgtGTGAjndfsKijIYbsgfsuadfe34r
        type: string
    type: object
  TripInfo:
    properties:
      destination_point:
        $ref: '#/definitions/Location'
        type: object
      distance:
        example: 15
        type: number
      starting_point:
        $ref: '#/definitions/Location'
        type: object
    type: object
  dto.AssignCarToDriverReq:
    properties:
      car_id:
        type: string
      driver_id:
        type: string
    type: object
  dto.OrderActionsReq:
    properties:
      action:
        type: string
      order_id:
        type: string
    type: object
info:
  contact: {}
  license: {}
  title: Taxi-service
  version: "1.0"
paths:
  /operators/assign:
    post:
      consumes:
      - application/json
      description: Assign the car to the driver
      parameters:
      - description: Body for assign car
        in: body
        name: JSON
        required: true
        schema:
          $ref: '#/definitions/dto.AssignCarToDriverReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrResp'
      security:
      - bearerAuth: []
      summary: Assign car to the driver
      tags:
      - operators
  /operators/car:
    post:
      consumes:
      - application/json
      description: Add new car to database
      parameters:
      - description: Body for add new car request
        in: body
        name: JSON
        required: true
        schema:
          $ref: '#/definitions/AddCarReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrResp'
      security:
      - bearerAuth: []
      summary: Add new car
      tags:
      - operators
  /operators/user:
    post:
      consumes:
      - application/json
      description: Create a new user by operator
      parameters:
      - description: Body for creation of a new user
        in: body
        name: JSON
        required: true
        schema:
          $ref: '#/definitions/SignUpReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrResp'
      summary: Create new user
      tags:
      - operators
  /orders:
    get:
      consumes:
      - application/json
      description: Create a new order as a client
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/GetAvailableOrdersResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrResp'
      security:
      - bearerAuth: []
      summary: Get available orders
      tags:
      - orders
    patch:
      consumes:
      - application/json
      description: Accept or close the order
      parameters:
      - description: Body for order actions
        in: body
        name: JSON
        required: true
        schema:
          $ref: '#/definitions/dto.OrderActionsReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrResp'
      security:
      - bearerAuth: []
      summary: Actions with order
      tags:
      - orders
    post:
      consumes:
      - application/json
      description: Create a new order as a client
      parameters:
      - description: Body for creating new order
        in: body
        name: JSON
        required: true
        schema:
          $ref: '#/definitions/CreateOrderReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrResp'
      security:
      - bearerAuth: []
      summary: Create order
      tags:
      - orders
  /sign_in:
    post:
      consumes:
      - application/json
      description: Sign in with login and password
      parameters:
      - description: Body for sign in
        in: body
        name: JSON
        required: true
        schema:
          $ref: '#/definitions/SignInReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/SignUpResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrResp'
      summary: Sign in
      tags:
      - authentication
  /sign_up:
    post:
      consumes:
      - application/json
      description: Sign up with login, password and account type (driver, client or operator)
      parameters:
      - description: Body for sign up
        in: body
        name: JSON
        required: true
        schema:
          $ref: '#/definitions/SignUpReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/SignUpResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrResp'
      summary: Sign up
      tags:
      - authentication
  /user:
    delete:
      consumes:
      - application/json
      description: Delete user profile from db
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrResp'
      security:
      - bearerAuth: []
      summary: Delete profile
      tags:
      - users
    get:
      consumes:
      - application/json
      description: Get your profile
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/GetProfileResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrResp'
      security:
      - bearerAuth: []
      summary: Get profile
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Edit user's name and email in profile info
      parameters:
      - description: Body for edit profile request
        in: body
        name: JSON
        required: true
        schema:
          $ref: '#/definitions/EditProfileReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrResp'
      security:
      - bearerAuth: []
      summary: Edit profile
      tags:
      - users
securityDefinitions:
  bearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
